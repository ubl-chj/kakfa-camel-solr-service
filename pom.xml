<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>staatsbibliothek-berlin.hsp</groupId>
  <artifactId>indexupdateservice</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>indexupdateservice</name>
  <description>Index Update Service</description>
  <packaging>war</packaging>

  <properties>
    <java.version>11</java.version>
    <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
    <jdeb.version>1.7</jdeb.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>

  <developers>
    <developer>
      <name>Marten Christoph</name>
      <email>Christoph.Marten@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Blondel Constantijn</name>
      <email>constantijn.blondel@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Eichstaedt Konrad</name>
      <email>konrad.eichstaedt@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Czarnecki Piotr</name>
      <email>piotr.czarnecki@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Johnson, Christopher</name>
      <email>johnson@ub.uni-leipzig.de</email>
    </developer>
  </developers>

  <scm>
    <developerConnection>
      scm:git@code.dev.sbb.berlin:HSP/indexupdateservice.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>org.ow2.asm</groupId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <!-- Default profile. -->
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <sign.package>false</sign.package>
      </properties>
    </profile>

    <!-- Profile for the CI server. -->
    <profile>
      <id>jenkins</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <sign.package>true</sign.package>
      </properties>
    </profile>
  </profiles>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <!-- implementation is needed only for Maven 2 -->
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <!-- implementation is needed only for Maven 2 -->
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Tests.java</include>
            <include>**/*Test.java</include>
          </includes>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>${maven.compiler.target}</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <configuration>
          <skipSource>true</skipSource>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!-- Allow registration as a service -->
          <executable>true</executable>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>3.3.4</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>jdeb</artifactId>
        <groupId>org.vafer</groupId>
        <version>${jdeb.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <id>indexupdateservice</id>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <name>Staatsbibliothek zu Berlin Handschriftenportal -
                Index Update Service
              </name>
              <classifier>core</classifier>
              <!-- changesIn>${basedir}/changes.txt</changesIn> <changesOut>${basedir}/identitymanagement.changes</changesOut>
                              <changesSave>CHANGES.txt</changesSave -->
              <controlDir>${basedir}/src/deb/indexupdateservice</controlDir>
              <deb>${project.build.directory}/${project.artifactId}_${project.version}_all.deb</deb>
              <changesOut>
                ${project.build.directory}/${project.artifactId}_${project.version}_all.changes
              </changesOut>
              <snapshotExpand>true</snapshotExpand>
              <signPackage>${sign.package}</signPackage>
              <signMethod>dpkg-sig</signMethod>
              <signRole>builder</signRole>
              <dataSet>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/etc/SBB/${project.artifactId}</path>
                    <path>/var/lib/SBB/${project.artifactId}</path>
                    <path>/var/log/SBB/${project.artifactId}</path>
                    <path>/var/run/SBB/${project.artifactId}</path>
                  </paths>
                </data>
                <data>
                  <src>${project.build.directory}/${project.build.finalName}.war</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/SBB/usr/local/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>755</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/classes/application.properties</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/classes/application-dev.properties</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/classes/application-prod.properties</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/classes/bootstrap.properties</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>

                <data>
                  <src>${basedir}/src/deb/files/${project.artifactId}.conf</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${basedir}/src/deb/files/${project.artifactId}.logrotate</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/logrotate.d</prefix>
                    <user>root</user>
                    <group>root</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${basedir}/src/deb/files/${project.artifactId}-tmpfiles.conf</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/tmpfiles.d</prefix>
                    <user>root</user>
                    <group>root</group>
                    <filemode>644</filemode>
                  </mapper>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/etc/init.d/${project.artifactId}</linkName>
                  <linkTarget>
                    /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.war
                  </linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>
                    /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.conf
                  </linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/${project.artifactId}.conf</linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>
                    /usr/local/SBB/usr/local/${project.artifactId}/application.properties
                  </linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/application.properties
                  </linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>
                    /usr/local/SBB/usr/local/${project.artifactId}/application-dev.properties
                  </linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/application-dev.properties</linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>
                    /usr/local/SBB/usr/local/${project.artifactId}/application-prod.properties
                  </linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/application-prod.properties
                  </linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/usr/local/SBB/usr/local/${project.artifactId}/bootstrap.properties
                  </linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/bootstrap.properties</linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}.logrotate
                  </linkName>
                  <linkTarget>/etc/logrotate.d/${project.artifactId}.logrotate</linkTarget>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}-tmpfiles.conf
                  </linkName>
                  <linkTarget>/etc/tmpfiles.d/${project.artifactId}-tmpfiles.conf</linkTarget>
                </data>
              </dataSet>
            </configuration>
          </execution>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <id>schottbackend-all</id>
            <configuration>
              <name>Staatsbibliothek zu Berlin Index Update Service</name>
              <classifier>all</classifier>
              <deb>${project.build.directory}/${project.artifactId}-all_${project.version}_all.deb
              </deb>
              <changesOut>
                ${project.build.directory}/${project.artifactId}-all_${project.version}_all.changes
              </changesOut>
              <controlDir>${basedir}/src/deb/indexupdateservice</controlDir>
              <snapshotExpand>true</snapshotExpand>
              <signPackage>${sign.package}</signPackage>
              <signMethod>dpkg-sig</signMethod>
              <signRole>builder</signRole>
              <dataSet>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/var/run/${project.artifactId}-all</path>
                  </paths>
                </data>
              </dataSet>
            </configuration>
          </execution>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <id>indexupdateservice-filebeat</id>
            <configuration>
              <name>Staatsbibliothek zu Berlin Index Update Service
                Filebeat Konfiguration
              </name>
              <classifier>filebeat</classifier>
              <deb>
                ${project.build.directory}/${project.artifactId}-filebeat_${project.version}.deb
              </deb>
              <changesOut>
                ${project.build.directory}/${project.artifactId}-filebeat_${project.version}.changes
              </changesOut>
              <controlDir>${basedir}/src/deb/indexupdateservice-filebeat</controlDir>
              <snapshotExpand>true</snapshotExpand>
              <signPackage>${sign.package}</signPackage>
              <signMethod>dpkg-sig</signMethod>
              <signRole>builder</signRole>
              <dataSet>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/var/run/${project.artifactId}-filebeat</path>
                  </paths>
                </data>
                <data>
                  <src>${basedir}/src/deb/files/filebeat-${project.artifactId}.yml</src>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/SBB/${project.artifactId}</prefix>
                    <user>${project.artifactId}</user>
                    <group>${project.artifactId}</group>
                    <filemode>655</filemode>
                  </mapper>
                </data>
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/etc/filebeat/conf.d/filebeat-${project.artifactId}.yml</linkName>
                  <linkTarget>/etc/SBB/${project.artifactId}/filebeat-${project.artifactId}.yml
                  </linkTarget>
                </data>
              </dataSet>
            </configuration>
          </execution>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <id>indexupdateservice-nagios</id>
            <configuration>
              <name>Staatsbibliothek zu Berlin Index Update Service -
                Nagios Konfiguration
              </name>
              <classifier>nagios</classifier>
              <deb>${project.build.directory}/${project.artifactId}-nagios_${project.version}.deb
              </deb>
              <changesOut>
                ${project.build.directory}/${project.artifactId}-nagios_${project.version}.changes
              </changesOut>
              <controlDir>${basedir}/src/deb/indexupdateservice-nagios</controlDir>
              <snapshotExpand>true</snapshotExpand>
              <signPackage>${sign.package}</signPackage>
              <signMethod>dpkg-sig</signMethod>
              <signRole>builder</signRole>
              <dataSet>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/var/run/${project.artifactId}-nagios</path>
                  </paths>
                </data>
              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
      <id>nexus-releases</id>
      <url>http://artefakt.sbb.spk-berlin.de:8081/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <url>http://artefakt.sbb.spk-berlin.de:8081/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
